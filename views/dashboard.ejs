<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Campus Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 min-h-screen flex flex-col">
    <%- include('partials/navbar') %>

    <!-- Main Content -->
    <main class="flex-grow max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <!-- Account Information Card -->
            <div class="bg-white shadow rounded-lg p-6 mb-6">
                <h2 class="text-2xl font-bold text-gray-800 mb-4">Welcome to your Dashboard</h2>
                <div class="border-t border-gray-200 pt-4">
                    <div class="grid grid-cols-1 gap-4">
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <h3 class="text-lg font-medium text-gray-900 mb-2">Account Information</h3>
                            <p class="text-gray-600">Name: <%= userData.name %></p>
                            <p class="text-gray-600">Email: <%= userData.email %></p>
                            <p class="<%= userData.isAccountVerified ? 'text-green-600' : 'text-red-600' %>">
                                Status: <%= userData.isAccountVerified ? 'Email Verified' : 'Email Not Verified' %>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Campus Cart Link Card -->
            <div class="bg-white shadow rounded-lg p-6 mb-6">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-bold text-gray-800">Campus Cart</h3>
                    <a href="/campus-cart" class="inline-flex items-center px-4 py-2 bg-indigo-600 border border-transparent rounded-md font-semibold text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Visit Campus Cart 
                        <svg xmlns="http://www.w3.org/2000/svg" class="ml-2 h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </a>
                </div>
                <p class="mt-2 text-gray-600">Shop for stationery, snacks, beverages, and more at your campus convenience store!</p>
            </div>

            <!-- Verification Section (Hidden by default) -->
            <% if (!userData.isAccountVerified) { %>
            <div id="verificationSection" class="bg-white shadow rounded-lg p-6">
                <h3 class="text-lg font-medium text-gray-900 mb-4">Email Verification</h3>
                <div class="space-y-4">
                    <!-- Send OTP Form -->
                    <div id="sendOtpSection">
                        <p class="text-gray-600 mb-4">Your email is not verified. Please verify your email to access all features.</p>
                        <button onclick="handleSendVerifyOtp()" 
                            class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
                            Send Verification OTP
                        </button>
                    </div>

                    <!-- Verify OTP Form -->
                    <form id="verifyOtpForm" class="space-y-4 hidden">
                        <div>
                            <label for="otp" class="block text-sm font-medium text-gray-700">Enter OTP</label>
                            <input type="text" id="otp" name="otp" required
                                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                        </div>
                        <button type="submit"
                            class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
                            Verify Email
                        </button>
                    </form>
                </div>
            </div>
            <% } %>
        </div>
    </main>

    <%- include('partials/footer') %>

    <!-- Message Display -->
    <div id="message" class="fixed bottom-4 right-4 p-4 rounded-md shadow-lg hidden"></div>

    <script>
        const userId = '<%= userData._id %>';

        async function handleSendVerifyOtp() {
            try {
                const response = await fetch('/api/auth/send-verify-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ userId }),
                    credentials: 'include'
                });

                const data = await response.json();

                if (data.success) {
                    showMessage('OTP sent to your email!', 'success');
                    document.getElementById('sendOtpSection').classList.add('hidden');
                    document.getElementById('verifyOtpForm').classList.remove('hidden');
                } else {
                    showMessage(data.message || 'Failed to send OTP', 'error');
                }
            } catch (error) {
                showMessage('An error occurred. Please try again.', 'error');
            }
        }

        // Handle OTP verification
        document.getElementById('verifyOtpForm')?.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const otp = document.getElementById('otp').value;

            try {
                const response = await fetch('/api/auth/verify-account', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        userId,
                        otp
                    }),
                    credentials: 'include'
                });

                const data = await response.json();

                if (data.success) {
                    showMessage('Email verified successfully!', 'success');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    showMessage(data.message || 'Verification failed', 'error');
                }
            } catch (error) {
                showMessage('An error occurred. Please try again.', 'error');
            }
        });

        async function handleLogout() {
            try {
                const response = await fetch('/api/auth/logout', {
                    method: 'POST',
                    credentials: 'include'
                });

                const data = await response.json();

                if (data.success) {
                    showMessage('Logout successful! Redirecting...', 'success');
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 1000);
                } else {
                    showMessage(data.message || 'Logout failed', 'error');
                }
            } catch (error) {
                showMessage('An error occurred during logout', 'error');
            }
        }

        function showMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = text;
            messageDiv.className = `fixed bottom-4 right-4 p-4 rounded-md shadow-lg ${
                type === 'success' ? 'bg-green-500' : 'bg-red-500'
            } text-white`;
            messageDiv.classList.remove('hidden');

            setTimeout(() => {
                messageDiv.classList.add('hidden');
            }, 3000);
        }
    </script>
</body>
</html> 